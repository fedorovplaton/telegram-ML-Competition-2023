variable ’)
{ ") without (" abort } ’) !
{ ’) @ execute } : )
{ null { -rot 2dup eq? not } { swap rot cons } while 2drop
} : list-until-marker
{ anon dup ’) @ 2 { ’) ! list-until-marker } does ’) ! } : (

"Lisp.fif" include
( ‘+ 2 ( ‘* 3 4 ) ) dup .l cr eval . cr

#!/usr/bin/fift -s
{ ."usage: " $0 type ."  " cr
  ."Computes the product of two integers." cr 1 halt } : usage
{ ’ usage if } : ?usage
$# 2 <> ?usage
$1 (number) 1- ?usage
$2 (number)` 1- `?usage
* . cr