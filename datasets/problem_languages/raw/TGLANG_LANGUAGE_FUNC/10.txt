() buy(int my_balance, slice marketplace_address, slice nft_address, slice nft_owner_address, int full_price, cell fees_cell, int msg_value, slice sender_address, int query_id) impure {
  throw_unless(450, msg_value >= full_price + min_gas_amount());

  var (marketplace_fee, royalty_address, royalty_amount) = load_fees(fees_cell);

  var owner_msg = begin_cell()
		   .store_uint(0x10, 6) ;; nobounce
		   .store_slice(nft_owner_address)
		   .store_coins(full_price - marketplace_fee - royalty_amount + (my_balance - msg_value))
		   .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1);

  send_raw_message(owner_msg.end_cell(), 1);


  var royalty_msg = begin_cell()
		   .store_uint(0x10, 6) ;; nobounce
		   .store_slice(royalty_address)
		   .store_coins(royalty_amount)
		   .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1);

  send_raw_message(royalty_msg.end_cell(), 1);


  var marketplace_msg = begin_cell()
		   .store_uint(0x10, 6) ;; nobounce
		   .store_slice(marketplace_address)
		   .store_coins(marketplace_fee)
		   .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1);

  send_raw_message(marketplace_msg.end_cell(), 1);

  var nft_msg = begin_cell()
		   .store_uint(0x18, 6)
		   .store_slice(nft_address)
		   .store_coins(0)
		   .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
		   .store_uint(op::transfer(), 32)
		   .store_uint(query_id, 64)
		   .store_slice(sender_address) ;; new_owner_address
		   .store_slice(sender_address) ;; response_address
		   .store_int(0, 1) ;; empty custom_payload
		   .store_coins(0) ;; forward amount to new_owner_address
		   .store_int(0, 1); ;; empty forward_payload


  send_raw_message(nft_msg.end_cell(), 128 + 32);
}